dnl
dnl Process this file with autoconf to produce a configure script.
dnl
AC_INIT(lib/ping.h)
AM_CONFIG_HEADER(include/config.h)
VERSION=`sed -e 's/^.*"\(.*\)";$/\1/' ${srcdir}/src/version.c`
AM_INIT_AUTOMAKE(libping, $VERSION)
DATE=2001-07-05
AC_SUBST(DATE)

dnl
dnl Define the utils directory
dnl
AC_CONFIG_AUX_DIR(utils)
AM_PROG_LIBTOOL
AC_PROG_MAKE_SET
AC_PROG_INSTALL

dnl
dnl canonicalize the host
dnl
AC_CANONICAL_HOST
AC_CANONICAL_TARGET

dnl
dnl Get the compiler
dnl
AC_PROG_CC

dnl 
dnl Check for AIX
dnl
AC_AIX

if test -n "$auto_cflags"; then
  if test -n "$GCC"; then
    CFLAGS="$CFLAGS -g -O2 -Wall -Wno-implicit"
  else
    case "$host_os" in
      *hpux*)  CFLAGS="$CFLAGS +O3"                      ;;
      *ultrix* | *osf*) CFLAGS="$CFLAGS -O -Olimit 2000" ;;
      *)       CFLAGS="$CFLAGS -O" ;;
    esac
  fi
fi

dnl
dnl with debugging
dnl
debugging="no"
AC_ARG_WITH(debugging,dnl
[  --with-debugging        compile with program debugging],
[  debugging="$withval"                                  ])
if test "$debugging" != "no"; then
  AC_MSG_RESULT(checking for debugging level... one)
  AC_DEFINE(DEBUG)
else
  AC_MSG_RESULT(checking for debugging level... zero)
fi

dnl
dnl with SSL support
dnl
MYSSL=off
sslfound=locate
SSL_INCLUDE=
SSL_LDFLAGS=
SSL_LIBS=
AC_ARG_WITH(ssl,dnl
[  --with-ssl              compile with ssl support],
[  MYSSL="$withval"                                ])
if test X"$MYSSL" = Xoff
then
  AC_MSG_RESULT(checking for ssl support... no)
else
  AC_MSG_RESULT(checking for ssl support... yes)
fi

dnl
dnl Check for ssl libraries
dnl
if test X"$MYSSL" = Xno
then
  AC_MSG_RESULT(HTTPS/ssl support disabled)
else
  AC_CHECK_HEADER($MYSSL/include/openssl/opensslv.h, sslfound=yes, sslfound=locate)
  if test $sslfound = "locate"; then
     dnl the user probably misunderstood the option....
     for dir in /usr /usr/local /usr/local/ssl /usr/pkg /usr/lib/ssl /usr/include/ssl /usr/include; do
       AC_CHECK_HEADER($dir/include/openssl/opensslv.h, sslfound=yes, sslfound=no)
       if test $sslfound = yes ; then
         SSL_LDFLAGS="-L$dir/lib"
         SSL_INCLUDE="-I$dir/include/openssl -I$dir/include"
         SSL_LIBS="-lssl -lcrypto"
         AC_SUBST(SSL_INCLUDE)
         AC_SUBST(SSL_LDFLAGS)
         AC_SUBST(SSL_LIBS)
         AC_DEFINE(HAVE_SSL)
      fi
    done
  else
    echo "found ssl in $MYSSL"
    SSL_LDFLAGS="-L$MYSSL/lib"
    SSL_INCLUDE="-I$MYSSL/include/openssl -I$MYSSL/include"
    SSL_LIBS="-lssl -lcrypto"
    AC_SUBST(SSL_INCLUDE)
    AC_SUBST(SSL_LDFLAGS)
    AC_SUBST(SSL_LIBS)
    AC_DEFINE(HAVE_SSL)
  fi
fi

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(stdlib.h)
AC_CHECK_HEADERS(unistd.h)
AC_CHECK_HEADERS(arpa/inet.h)
AC_CHECK_HEADERS(sys/socket.h)
AC_CHECK_HEADERS(sys/time.h)
AC_CHECK_HEADERS(sys/times.h)
AC_CHECK_HEADERS(netinet/in.h)
AC_CHECK_HEADERS(netinet/in_systm.h)
AC_CHECK_HEADERS(netdb.h)

dnl
dnl checks for typedefs, structures, and compiler characteristics.
dnl
AC_C_CONST
AC_TYPE_SIZE_T
AC_HEADER_TIME

dnl
dnl Check library functions.
dnl
AC_CHECK_FUNCS(socket, , AC_CHECK_LIB(socket, socket))
AC_CHECK_FUNCS(gethostbyname, , AC_CHECK_LIB(nsl, gethostbyname))
AC_CHECK_FUNCS(strchr memcpy strstr strcmp strncmp strncpy strlen)
AC_CHECK_FUNCS(strncasecmp strcasecmp strncmp)

dnl
dnl Check for libraries
dnl
AC_CHECK_LIB(socket, socket)
AC_CHECK_LIB(resolv, res_search)

dnl
dnl create the libping header
dnl
AC_OUTPUT_COMMANDS([
  infile=include/ping.h.in
  outfile=include/ping.h
  rm -f $outfile
  sed -e "s|%_VERSION%|$VERSION|" \
      -e "s|%_DATE%|$DATE|" \
      < $infile > $outfile

], [ VERSION=$VERSION DATE="$DATE" ])

AC_OUTPUT(Makefile doc/Makefile include/Makefile lib/Makefile src/Makefile utils/Makefile) 
